name: push action

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/push_action.yml'
      - 'app/**'

jobs:
  install-dependency:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Cache Node.js modules
        uses: actions/cache@v3
        id: node_modules_cache_id
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
      # cache hit時はinstallをスキップ
      - name: Install dependencies
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: |
          cd app
          yarn

  lint:
    runs-on: ubuntu-latest
    needs:
      - install-dependency
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Restore Node.js modules
        uses: actions/cache@v3
        id: node_modules_cache_id
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: svelte-check
        run: |
          cd app
          yarn
          yarn check

  deploy:
    runs-on: ubuntu-latest
    needs:
      - install-dependency
      - lint
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
      - name: Restore Node.js modules
        uses: actions/cache@v3
        id: node_modules_cache_id
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Build
        run: |
          cd app
          yarn
          yarn build
          sed -i -e "s/LASTMOD_DATE/`date +%Y-%m-%d`/" public/sitemap.xml
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - 'app/**'
      - name: Deploy
        if: steps.changes.outputs.src == 'true'
        env:
          S3_UPLOAD_BUCKET: ${{ secrets.S3_UPLOAD_BUCKET }}
        run: |
          cd app
          aws s3 cp ./public s3://$S3_UPLOAD_BUCKET/ --recursive
